version: '3.4'

services:
  TemplateApi:
    image: my-words-new
    labels:
      NAME: "my words Api"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/my-words/template/wwwroot:/app/wwwroot"
      - "/mnt/project_logs/my-words/template:/app/logs"
    
    build:
      context: .
      dockerfile: GatewayApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
    restart: always
    ports:
      - "3000:3000"
  
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: MyWords
    ports:
      - "5433:5433"
    volumes:
      - pgdata:/var/lib/postgresql/data
  
##  GatewayApi:
##    image: my-words-gateway
##    labels:
##      NAME: "Gateway Api"
##    volumes:
##      - "/etc/localtime:/etc/localtime:ro"
##      - "/etc/timezone:/etc/timezone:ro"
##      - "/mnt/project_logs/my-words/gateway:/app/logs" 
##
##    build:
##      context: .
##      dockerfile: GatewayApi/Dockerfile
##    environment:
##      - ASPNETCORE_ENVIRONMENT=Staging
##
##    restart: always
##    ports:
##      - "3000:3000"
        
##  AuthApi:
##    image: my-words-auth
##    labels:
##      NAME: "Auth Api"
##    volumes:
##      - "/etc/localtime:/etc/localtime:ro"
##      - "/etc/timezone:/etc/timezone:ro"
##      - "/mnt/project_logs/my-words/auth:/app/logs" 
##
##    build:
##      context: .
##      dockerfile: AuthApi/Dockerfile
##    environment:
##      - ASPNETCORE_ENVIRONMENT=Staging
##
##    restart: always
##    ports:
##      - "3001:3001"

##  AssetApi:
##    image: my-words-asset
##    labels:
##      NAME: "Asset Api"
##    volumes:
##      - "/etc/localtime:/etc/localtime:ro"
##      - "/etc/timezone:/etc/timezone:ro"
##      - "/my-words/AssetApi/wwwroot:/app/wwwroot"
##      - "/mnt/project_logs/my-words/asset:/app/logs" 
##
##    build:
##      context: .
##      dockerfile: AssetApi/Dockerfile
##    environment:
##      - ASPNETCORE_ENVIRONMENT=Staging
##
##    restart: always
##    ports:
##      - "3002:3002"

volumes:
  pgdata:

networks:
  my-words-new:
    external: true